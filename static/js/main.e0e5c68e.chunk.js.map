{"version":3,"sources":["constants.js","provider.js","PrivateRoute.jsx","Feed.jsx","Home.jsx","About.jsx","Login.jsx","Logout.jsx","Register.jsx","ManageSocialProfiles.jsx","Account.jsx","ChangePassword.jsx","NotFound.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["API_BASE_URL","process","ROUTES","MOODS","displayName","value","simulateLag","a","min","max","Promise","resolve","setTimeout","Math","random","getSocialFeed","mood","url","URL","searchParams","set","window","fetch","toString","res","json","data","ok","Error","error","getStoredUserData","username","JSON","parse","localStorage","getItem","e","register","password","toLowerCase","userData","clear","setItem","stringify","login","logout","changePassword","oldPassword","newPassword","deleteAccount","PrivateRoute","children","props","render","location","to","pathname","state","from","NO_MOOD","Feed","useState","feed","setFeed","showSpinner","setShowSpinner","setMood","showError","setShowError","moodsDropdown","DropdownButton","title","map","Dropdown","Item","as","onSelect","Divider","useEffect","then","catch","console","finally","Card","bg","style","borderRadius","Body","Container","className","Spinner","animation","role","variant","Array","isArray","length","post","index","Title","name","Text","text","Alert","Heading","Button","onClick","Home","About","Login","onLogin","history","useHistory","useLocation","setUsername","setPassword","validated","setValidated","errorMessage","setErrorMessage","disableSubmit","setDisableSubmit","event","preventDefault","currentTarget","checkValidity","replace","message","Form","onSubmit","noValidate","Group","controlId","Label","Control","type","required","onChange","target","onClose","dismissible","disabled","Logout","onLogout","push","Register","onRegister","confirmPassword","setConfirmPassword","isValid","inputElement","setCustomValidity","Feedback","ManageSocialProfiles","Account","onDelete","disableDeleteAccount","setDisableDeleteAccount","deleteAccountError","setDeleteAccountError","confirm","ChangePassword","onPasswordChange","setOldPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","NotFound","App","setUserData","Navbar","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","NavDropdown","alignRight","Header","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0e5c68e.chunk.js","sourcesContent":["export const API_BASE_URL = process.env.REACT_APP_API_ENDPOINT;\n\nexport const ROUTES = {\n  HOME: \"/\",\n  ABOUT: \"/about\",\n  LOGIN: \"/login\",\n  LOGOUT: \"/logout\",\n  REGISTER: \"/register\",\n  ACCOUNT: \"/account\",\n  MANAGE_SOCIAL_PROFILES: \"/manage-social-profiles\",\n  CHANGE_PASSWORD: \"/edit-password\",\n};\n\nexport const MOODS = [\n  {\n    displayName: \"Positive\",\n    value: \"positive\",\n  },\n  {\n    displayName: \"Neutral\",\n    value: \"neutral\",\n  },\n  {\n    displayName: \"Negative\",\n    value: \"negative\",\n  },\n];\n","import { API_BASE_URL } from \"./constants\";\n\n// TODO: remove this once we have actual calls to the backend\nasync function simulateLag(min = 400, max = 1500) {\n  await new Promise((resolve) =>\n    setTimeout(resolve, min + Math.random() * (max - min))\n  );\n}\n\nexport async function getSocialFeed(mood = null) {\n  const url = new URL(\"/timelineTweets\", API_BASE_URL);\n\n  if (mood) {\n    url.searchParams.set(\"mood\", mood);\n  }\n\n  const res = await window.fetch(url.toString());\n  const data = await res.json();\n\n  if (!res.ok) {\n    throw new Error(\n      data.error || \"An error occurred while getting social feed\"\n    );\n  }\n\n  return data;\n}\n\nexport function getStoredUserData() {\n  try {\n    const userData = JSON.parse(localStorage.getItem(\"userData\"));\n\n    return {\n      username: userData.username,\n    };\n  } catch (e) {\n    return null;\n  }\n}\n\nexport async function register({ username, password }) {\n  await simulateLag();\n\n  if (username.toLowerCase() === \"error\") {\n    throw new Error(\"That username is hard-coded to trigger an error\");\n  }\n\n  const userData = {\n    username,\n  };\n\n  localStorage.clear();\n  localStorage.setItem(\"userData\", JSON.stringify(userData));\n\n  return userData;\n}\n\nexport async function login({ username, password }) {\n  await simulateLag();\n\n  if (username.toLowerCase() === \"guest\") {\n    return register({ username });\n  }\n\n  throw new Error(`Account for \"${username}\" does not exist`);\n}\n\nexport async function logout() {\n  await simulateLag();\n\n  localStorage.clear();\n}\n\nexport async function changePassword({ oldPassword, newPassword }) {\n  await simulateLag();\n}\n\nexport async function deleteAccount(username) {\n  await simulateLag();\n\n  const userData = getStoredUserData();\n\n  if (userData.username !== username) {\n    throw new Error(\"Could not delete account\");\n  }\n\n  localStorage.clear();\n}\n","import { Route, Redirect } from \"react-router-dom\";\nimport { ROUTES } from \"./constants\";\nimport { getStoredUserData } from \"./provider\";\n\nexport function PrivateRoute({ children, ...props }) {\n  const userData = getStoredUserData();\n\n  function render({ location }) {\n    if (userData?.username) {\n      return children;\n    }\n\n    return (\n      <Redirect\n        to={{\n          pathname: ROUTES.LOGIN,\n          state: { from: location },\n        }}\n      />\n    );\n  }\n\n  return <Route {...props} render={render} />;\n}\n","import { useEffect, useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Container from \"react-bootstrap/Container\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Button from \"react-bootstrap/Button\";\nimport { MOODS } from \"./constants\";\nimport { getSocialFeed } from \"./provider\";\n\nconst NO_MOOD = {\n  /** @type {string} */\n  displayName: \"None\",\n  /** @type {null|string} */\n  value: null,\n};\n\nexport function Feed() {\n  const [feed, setFeed] = useState();\n  const [showSpinner, setShowSpinner] = useState(false);\n  const [mood, setMood] = useState(NO_MOOD);\n  const [showError, setShowError] = useState(false);\n\n  const moodsDropdown = (\n    <DropdownButton title={`Mood: ${mood.displayName}`}>\n      {MOODS.map((mood) => (\n        <Dropdown.Item as=\"button\" onSelect={() => setMood(mood)}>\n          {mood.displayName}\n        </Dropdown.Item>\n      ))}\n      <Dropdown.Divider />\n      <Dropdown.Item as=\"button\" onSelect={() => setMood(NO_MOOD)}>\n        {NO_MOOD.displayName}\n      </Dropdown.Item>\n    </DropdownButton>\n  );\n\n  useEffect(() => {\n    setShowSpinner(true);\n\n    getSocialFeed(mood.value)\n      .then(setFeed)\n      .catch((error) => {\n        console.error(error);\n        setShowError(true);\n      })\n      .finally(() => setShowSpinner(false));\n  }, [mood.value]);\n\n  return (\n    <div>\n      {/* Feed header with filters*/}\n      <Card bg={\"light\"} style={{ borderRadius: \"0\" }}>\n        <Card.Body>\n          <Container>\n            <div className={\"d-flex align-items-center\"}>\n              <div className={\"mr-auto\"}>{moodsDropdown}</div>\n              <Spinner\n                animation=\"border\"\n                role=\"status\"\n                variant={\"primary\"}\n                className={showSpinner ? \"visible\" : \"invisible\"}\n              >\n                <span className=\"sr-only\">Loading...</span>\n              </Spinner>\n            </div>\n          </Container>\n        </Card.Body>\n      </Card>\n\n      {/* Actual feed */}\n      <Container className={\"my-3\"}>\n        {!showError &&\n          Array.isArray(feed) &&\n          feed.length > 0 &&\n          feed.map((post, index) => (\n            <Card key={`post-${index}`} className={\"my-3\"}>\n              <Card.Body>\n                <Card.Title>{post.name}</Card.Title>\n                <Card.Text>{post.text}</Card.Text>\n              </Card.Body>\n            </Card>\n          ))}\n\n        {!showError && Array.isArray(feed) && feed.length <= 0 && (\n          <div className={\"text-center\"}>\n            <h2>Feed is Empty</h2>\n\n            <p className={\"lead\"}>No posts could be found for your feed.</p>\n          </div>\n        )}\n\n        {showError && (\n          <Alert variant=\"danger\">\n            <Alert.Heading>Error Retrieving Social Feed</Alert.Heading>\n            <p>An error occurred while retrieving your social feed</p>\n            <Button\n              variant={\"primary\"}\n              onClick={() => {\n                setShowSpinner(true);\n                setShowError(false);\n\n                getSocialFeed(mood.value)\n                  .then(setFeed)\n                  .catch((error) => {\n                    console.error(error);\n                    setShowError(true);\n                  })\n                  .finally(() => setShowSpinner(false));\n              }}\n            >\n              Retry\n            </Button>\n          </Alert>\n        )}\n      </Container>\n    </div>\n  );\n}\n","import Container from \"react-bootstrap/Container\";\nimport { Feed } from \"./Feed\";\n\nexport function Home() {\n  return (\n    <>\n      <Container>\n        <h1>Feed</h1>\n      </Container>\n\n      <Feed />\n    </>\n  );\n}\n","import Container from \"react-bootstrap/Container\";\n\nexport function About() {\n  return (\n    <Container>\n      <h1>About</h1>\n\n      <p>This is our about page</p>\n    </Container>\n  );\n}\n","import { useState } from \"react\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Container from \"react-bootstrap/Container\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport { ROUTES } from \"./constants\";\n\nexport function Login({ onLogin = async () => {} }) {\n  const history = useHistory();\n  const location = useLocation();\n\n  const { from } = location.state || { from: { pathname: ROUTES.HOME } };\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [validated, setValidated] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [disableSubmit, setDisableSubmit] = useState(false);\n\n  async function onSubmit(event) {\n    setValidated(true);\n    event.preventDefault();\n\n    if (!event.currentTarget.checkValidity()) {\n      return;\n    }\n\n    setDisableSubmit(true);\n\n    try {\n      await onLogin({ username, password });\n\n      setDisableSubmit(false);\n      history.replace(from);\n    } catch (e) {\n      setDisableSubmit(false);\n      setErrorMessage(e.message);\n    }\n  }\n\n  return (\n    <Container className={\"text-center\"}>\n      <Card bg={\"light\"}>\n        <Card.Body>\n          <Card.Title>\n            <h1>Login</h1>\n          </Card.Title>\n\n          <Form onSubmit={onSubmit} noValidate validated={validated}>\n            <div className={\"text-left\"}>\n              <Form.Group controlId={\"loginUsername\"}>\n                <Form.Label>Username</Form.Label>\n                <Form.Control\n                  type={\"text\"}\n                  required\n                  value={username}\n                  onChange={(event) => setUsername(event.target.value)}\n                />\n              </Form.Group>\n\n              <Form.Group controlId={\"loginPassword\"}>\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type={\"password\"}\n                  required\n                  value={password}\n                  onChange={(event) => setPassword(event.target.value)}\n                />\n              </Form.Group>\n            </div>\n\n            {errorMessage && (\n              <Alert\n                variant=\"danger\"\n                onClose={() => setErrorMessage(\"\")}\n                dismissible\n                className={\"text-left\"}\n              >\n                <Alert.Heading>Login Error</Alert.Heading>\n                <p>\n                  An error occurred while attempting to log you in. This error\n                  message was provided:\n                </p>\n\n                <blockquote className=\"blockquote\">\n                  <p className=\"mb-0\">{errorMessage}</p>\n                </blockquote>\n              </Alert>\n            )}\n\n            <Button\n              variant={\"primary\"}\n              type={\"submit\"}\n              disabled={disableSubmit}\n            >\n              Submit\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n\n      <p className={\"mt-3\"}>\n        Don't have an account yet? <Link to={ROUTES.REGISTER}>Register</Link>\n      </p>\n    </Container>\n  );\n}\n","import { useEffect } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport { useHistory } from \"react-router-dom\";\nimport { ROUTES } from \"./constants\";\n\nexport function Logout({ onLogout = () => {} }) {\n  const history = useHistory();\n\n  useEffect(() => {\n    Promise.resolve(onLogout()).then(() => history.push(ROUTES.HOME));\n  }, [history, onLogout]);\n\n  return (\n    <Container>\n      <h1>Logout</h1>\n\n      <p>Logging you out. Please wait...</p>\n    </Container>\n  );\n}\n","import { useState } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Alert from \"react-bootstrap/Alert\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { ROUTES } from \"./constants\";\n\nexport function Register({ onRegister = async () => {} }) {\n  const history = useHistory();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [validated, setValidated] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [disableSubmit, setDisableSubmit] = useState(false);\n\n  async function onSubmit(event) {\n    setValidated(true);\n    event.preventDefault();\n\n    if (!event.currentTarget.checkValidity()) {\n      return;\n    }\n\n    setDisableSubmit(true);\n\n    try {\n      await onRegister({ username, password });\n\n      setDisableSubmit(false);\n      history.push(ROUTES.HOME);\n    } catch (e) {\n      setDisableSubmit(false);\n      setErrorMessage(e.message);\n    }\n  }\n\n  return (\n    <Container className={\"text-center\"}>\n      <Card bg={\"light\"}>\n        <Card.Body>\n          <Card.Title>\n            <h1>Register</h1>\n          </Card.Title>\n\n          <Form onSubmit={onSubmit} noValidate validated={validated}>\n            <div className={\"text-left\"}>\n              <Form.Group controlId={\"registerUsername\"}>\n                <Form.Label>Username</Form.Label>\n                <Form.Control\n                  required\n                  type={\"text\"}\n                  value={username}\n                  onChange={(event) => setUsername(event.target.value)}\n                />\n              </Form.Group>\n\n              <Form.Group controlId={\"registerPassword\"}>\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  required\n                  type={\"password\"}\n                  value={password}\n                  onChange={(event) => {\n                    setPassword(event.target.value);\n                    setConfirmPassword(\"\");\n                  }}\n                />\n              </Form.Group>\n\n              <Form.Group controlId={\"registerConfirmPassword\"}>\n                <Form.Label>Confirm password</Form.Label>\n                <Form.Control\n                  required\n                  type={\"password\"}\n                  value={confirmPassword}\n                  isValid={false}\n                  onChange={(event) => {\n                    const inputElement = event.target;\n\n                    setConfirmPassword(inputElement.value);\n\n                    // This uses the constraint validation API to set this field\n                    // as either valid or invalid.\n                    inputElement.setCustomValidity(\n                      inputElement.value !== password\n                        ? \"Passwords don't match\"\n                        : \"\"\n                    );\n                  }}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  Passwords don't match\n                </Form.Control.Feedback>\n              </Form.Group>\n            </div>\n\n            {errorMessage && (\n              <Alert\n                variant=\"danger\"\n                onClose={() => setErrorMessage(\"\")}\n                dismissible\n                className={\"text-left\"}\n              >\n                <Alert.Heading>Registration Error</Alert.Heading>\n                <p>\n                  An error occurred while attempting to register you. This error\n                  message was provided:\n                </p>\n\n                <blockquote className=\"blockquote\">\n                  <p className=\"mb-0\">{errorMessage}</p>\n                </blockquote>\n              </Alert>\n            )}\n\n            <Button\n              variant={\"primary\"}\n              type={\"submit\"}\n              disabled={disableSubmit}\n            >\n              Submit\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n\n      <p className={\"mt-3\"}>\n        Already have an account? <Link to={ROUTES.LOGIN}>Login</Link>\n      </p>\n    </Container>\n  );\n}\n","import Container from \"react-bootstrap/Container\";\n\nexport function ManageSocialProfiles() {\n  // TODO: implement this\n\n  return (\n    <Container>\n      <h1>Manage Social Media Profiles</h1>\n    </Container>\n  );\n}\n","import { useState } from \"react\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { ROUTES } from \"./constants\";\n\nexport function Account({ username, onDelete = () => {} }) {\n  const history = useHistory();\n  const [disableDeleteAccount, setDisableDeleteAccount] = useState(false);\n  const [deleteAccountError, setDeleteAccountError] = useState(\"\");\n\n  return (\n    <Container>\n      <h1>My Account</h1>\n      <small className=\"text-muted\">Logged in as {username}</small>\n\n      <hr />\n\n      <p>\n        <Link to={ROUTES.CHANGE_PASSWORD}>Change Password</Link>\n      </p>\n\n      <p>\n        <Link to={ROUTES.MANAGE_SOCIAL_PROFILES}>\n          Manage Social Media Profiles\n        </Link>\n      </p>\n\n      <hr />\n\n      <Button\n        variant=\"danger\"\n        disabled={disableDeleteAccount}\n        onClick={async () => {\n          if (\n            !window.confirm(\n              \"Are you sure you want to delete your account and all associated data? \" +\n                \"This cannot be undone.\"\n            )\n          ) {\n            return;\n          }\n\n          setDisableDeleteAccount(true);\n\n          try {\n            await onDelete(username);\n            setDisableDeleteAccount(false);\n\n            history.push(ROUTES.HOME);\n          } catch (e) {\n            setDisableDeleteAccount(false);\n            setDeleteAccountError(e.message);\n          }\n        }}\n      >\n        Delete My Account\n      </Button>\n\n      {deleteAccountError && (\n        <Alert\n          variant=\"danger\"\n          onClose={() => setDeleteAccountError(\"\")}\n          dismissible\n          className={\"text-left\"}\n        >\n          <Alert.Heading>Delete Account Error</Alert.Heading>\n          <p>\n            An error occurred while attempting to delete your account. This\n            error message was provided:\n          </p>\n\n          <blockquote className=\"blockquote\">\n            <p className=\"mb-0\">{deleteAccountError}</p>\n          </blockquote>\n        </Alert>\n      )}\n    </Container>\n  );\n}\n","import { useState } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Alert from \"react-bootstrap/Alert\";\nimport { useHistory } from \"react-router-dom\";\nimport { ROUTES } from \"./constants\";\n\nexport function ChangePassword({ onPasswordChange = async () => {} }) {\n  const history = useHistory();\n  const [oldPassword, setOldPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmNewPassword, setConfirmNewPassword] = useState(\"\");\n  const [validated, setValidated] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [disableSubmit, setDisableSubmit] = useState(false);\n\n  async function onSubmit(event) {\n    setValidated(true);\n    event.preventDefault();\n\n    if (!event.currentTarget.checkValidity()) {\n      return;\n    }\n\n    setDisableSubmit(true);\n\n    try {\n      await onPasswordChange({ oldPassword, newPassword });\n\n      setDisableSubmit(false);\n      history.push(ROUTES.ACCOUNT);\n    } catch (e) {\n      setDisableSubmit(false);\n      setErrorMessage(e.message);\n    }\n  }\n\n  return (\n    <Container className={\"text-center\"}>\n      <Card bg={\"light\"}>\n        <Card.Body>\n          <Card.Title>\n            <h1>Change Password</h1>\n          </Card.Title>\n\n          <Form onSubmit={onSubmit} noValidate validated={validated}>\n            <div className={\"text-left\"}>\n              <Form.Group controlId={\"changePasswordOldPassword\"}>\n                <Form.Label>Old password</Form.Label>\n                <Form.Control\n                  required\n                  type={\"password\"}\n                  value={oldPassword}\n                  onChange={(event) => setOldPassword(event.target.value)}\n                />\n              </Form.Group>\n\n              <Form.Group controlId={\"changePasswordNewPassword\"}>\n                <Form.Label>New password</Form.Label>\n                <Form.Control\n                  required\n                  type={\"password\"}\n                  value={newPassword}\n                  onChange={(event) => {\n                    setNewPassword(event.target.value);\n                    setConfirmNewPassword(\"\");\n                  }}\n                />\n              </Form.Group>\n\n              <Form.Group controlId={\"changePasswordConfirmNewPassword\"}>\n                <Form.Label>Confirm new password</Form.Label>\n                <Form.Control\n                  required\n                  type={\"password\"}\n                  value={confirmNewPassword}\n                  isValid={false}\n                  onChange={(event) => {\n                    const inputElement = event.target;\n\n                    setConfirmNewPassword(inputElement.value);\n\n                    // This uses the constraint validation API to set this field\n                    // as either valid or invalid.\n                    inputElement.setCustomValidity(\n                      inputElement.value !== newPassword\n                        ? \"Passwords don't match\"\n                        : \"\"\n                    );\n                  }}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  Passwords don't match\n                </Form.Control.Feedback>\n              </Form.Group>\n            </div>\n\n            {errorMessage && (\n              <Alert\n                variant=\"danger\"\n                onClose={() => setErrorMessage(\"\")}\n                dismissible\n                className={\"text-left\"}\n              >\n                <Alert.Heading>Change Password Error</Alert.Heading>\n                <p>\n                  An error occurred while attempting to change your password.\n                  This error message was provided:\n                </p>\n\n                <blockquote className=\"blockquote\">\n                  <p className=\"mb-0\">{errorMessage}</p>\n                </blockquote>\n              </Alert>\n            )}\n\n            <Button\n              variant={\"primary\"}\n              type={\"submit\"}\n              disabled={disableSubmit}\n            >\n              Submit\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n    </Container>\n  );\n}\n","import Container from \"react-bootstrap/Container\";\n\nexport function NotFound() {\n  return (\n    <Container>\n      <h1>404 Not Found</h1>\n\n      <p className=\"lead\">Page not found</p>\n    </Container>\n  );\n}\n","import { useState } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\nimport { Switch, Route, Link, HashRouter } from \"react-router-dom\";\nimport { ROUTES } from \"./constants\";\nimport { PrivateRoute } from \"./PrivateRoute\";\nimport { Home } from \"./Home\";\nimport { About } from \"./About\";\nimport { Login } from \"./Login\";\nimport { Logout } from \"./Logout\";\nimport { Register } from \"./Register\";\nimport { ManageSocialProfiles } from \"./ManageSocialProfiles\";\nimport { Account } from \"./Account\";\nimport { ChangePassword } from \"./ChangePassword\";\nimport { NotFound } from \"./NotFound\";\nimport {\n  changePassword,\n  deleteAccount,\n  getStoredUserData,\n  login,\n  logout,\n  register,\n} from \"./provider\";\n\nfunction App() {\n  const [userData, setUserData] = useState(getStoredUserData());\n\n  async function onRegister({ username, password }) {\n    setUserData(await register({ username, password }));\n  }\n\n  async function onLogin({ username, password }) {\n    setUserData(await login({ username, password }));\n  }\n\n  async function onLogout() {\n    await logout();\n    setUserData(getStoredUserData());\n  }\n\n  async function onDelete(username) {\n    await deleteAccount(username);\n    setUserData(getStoredUserData());\n  }\n\n  async function onPasswordChange({ oldPassword, newPassword }) {\n    await changePassword({ oldPassword, newPassword });\n  }\n\n  return (\n    <HashRouter>\n      <Navbar variant={\"dark\"} bg={\"dark\"} expand={\"sm\"}>\n        <Container>\n          <Navbar.Brand>Moody Socials</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Link className={\"nav-link\"} to={ROUTES.HOME}>\n                Home\n              </Link>\n              <Link className={\"nav-link\"} to={ROUTES.ABOUT}>\n                About\n              </Link>\n            </Nav>\n\n            {!userData && (\n              <Link className={\"btn btn-primary\"} to={ROUTES.LOGIN}>\n                Login\n              </Link>\n            )}\n\n            {userData && (\n              <Nav>\n                <NavDropdown\n                  title={\"Account\"}\n                  id={\"main-nav-account\"}\n                  alignRight={true}\n                >\n                  <NavDropdown.Header>\n                    Logged in as {userData.username}\n                  </NavDropdown.Header>\n\n                  <Link className={\"dropdown-item\"} to={ROUTES.ACCOUNT}>\n                    Account\n                  </Link>\n\n                  <Link\n                    className={\"dropdown-item\"}\n                    to={ROUTES.MANAGE_SOCIAL_PROFILES}\n                  >\n                    Manage Social Media Profiles\n                  </Link>\n\n                  <NavDropdown.Divider />\n\n                  <Link className={\"dropdown-item\"} to={ROUTES.LOGOUT}>\n                    Logout\n                  </Link>\n                </NavDropdown>\n              </Nav>\n            )}\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n      <main className={\"mt-5 mb-5\"}>\n        <Switch>\n          <Route exact path={ROUTES.HOME}>\n            <Home />\n          </Route>\n          <Route exact path={ROUTES.ABOUT}>\n            <About />\n          </Route>\n          <Route exact path={ROUTES.LOGIN}>\n            <Login onLogin={onLogin} />\n          </Route>\n          <Route exact path={ROUTES.REGISTER}>\n            <Register onRegister={onRegister} />\n          </Route>\n          <PrivateRoute exact path={ROUTES.MANAGE_SOCIAL_PROFILES}>\n            <ManageSocialProfiles />\n          </PrivateRoute>\n          <PrivateRoute exact path={ROUTES.ACCOUNT}>\n            <Account username={userData?.username} onDelete={onDelete} />\n          </PrivateRoute>\n          <PrivateRoute exact path={ROUTES.CHANGE_PASSWORD}>\n            <ChangePassword onPasswordChange={onPasswordChange} />\n          </PrivateRoute>\n          <Route exact path={ROUTES.LOGOUT}>\n            <Logout onLogout={onLogout} />\n          </Route>\n          <Route path=\"*\">\n            {/* 404 page */}\n            <NotFound />\n          </Route>\n          {/* TODO: add a guard here to prevent accessing routes when you are not logged in */}\n        </Switch>\n      </main>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}